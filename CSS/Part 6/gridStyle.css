.container {
    width: 600px;
    height: 300px;
    background-color: black;
    display: grid;          /* we can use display: inline-grid to make the grid an act as an inline element */
    /* grid-template-rows: 50px 50px 50px 50px 50px;
    grid-template-columns: 200px 200px 200px; */
    grid-template-rows: repeat(4,1fr);
    grid-template-columns: repeat(3,1fr);
    /* row-gap: 10px;
    column-gap: 10px; */
    grid-gap: 10px 20px;
    /* justify-items: center;
    align-items: center; */
    place-items: end;
}

.item {
    width: 100px;
    height: 50px;
    background-color: greenyellow;
    border: 2px solid burlywood;
    text-align: center;
}

.one {
    /* grid-column-start: 1;
    grid-column-end: 3; */
    /* grid-column: 1/4; */
    grid-column: 1/span 2;     /* span <number of rows/number of columns> */
    /* justify-self: end; */
    place-self: start;
}

.two {
    /* these numbers are basically the line numbers */ 
    /* grid-row: 1/3; */
    /* align-self: center; */
    place-self : center;
}


/* Grid Gaps : They define the gaps between the lines */
/* Grid Columns : Defines an item's starting & ending position inside the column */
/* Grid Rows : Defines an item's starting & ending position inside the row */
/* Common Properties : justify-items and justify-self -> horizontal
                    align-items and align-self -> vertical
                    if we want to have same properties for both directions use place items and place self.
*/
